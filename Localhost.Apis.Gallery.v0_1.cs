using System.Collections.Generic;
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.4.2
//     C# generater version: 
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Localhost.Apis.Gallery.v0_1.Data
{    

    public class CreateItemRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("file")]
        public virtual MediaMessage File { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("item")]
        public virtual Item Item { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class IdRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class IdResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("location")]
        public virtual string Location { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Item : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("extension")]
        public virtual string Extension { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("fileData")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> FileData { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("fileName")]
        public virtual string FileName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("length")]
        public virtual System.Nullable<int> Length { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,string> Metadata { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("mime")]
        public virtual string Mime { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<Tag> Tags { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("uploaded")]
        public virtual string Uploaded { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("uploader")]
        public virtual string Uploader { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ItemSearchRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("cutoffDate")]
        public virtual string CutoffDate { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("page")]
        public virtual System.Nullable<int> Page { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("perPage")]
        public virtual System.Nullable<int> PerPage { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<Tag> Tags { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class MediaMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("bytes")]
        public virtual System.Collections.Generic.IList<System.Nullable<int>> Bytes { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("cacheControl")]
        public virtual string CacheControl { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("contentEncoding")]
        public virtual string ContentEncoding { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("contentLanguage")]
        public virtual string ContentLanguage { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("md5Hash")]
        public virtual string Md5Hash { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,string> Metadata { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class PaginatedResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<string> Items { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("page")]
        public virtual System.Nullable<int> Page { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("pageCount")]
        public virtual System.Nullable<int> PageCount { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<int> StartIndex { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("totalCount")]
        public virtual System.Nullable<int> TotalCount { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("totalPages")]
        public virtual System.Nullable<int> TotalPages { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class PasswordChangeRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("currentPassword")]
        public virtual string CurrentPassword { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("newPassword")]
        public virtual string NewPassword { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SetupRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("adminPassword")]
        public virtual string AdminPassword { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("adminUser")]
        public virtual string AdminUser { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SetupResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("adminUser")]
        public virtual System.Nullable<bool> AdminUser { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Tag : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class TagCategory : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("color")]
        public virtual string Color { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class UpdateItemRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("files")]
        public virtual System.Collections.Generic.IList<MediaMessage> Files { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("item")]
        public virtual Item Item { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class User : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("password")]
        public virtual string Password { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Localhost.Apis.Gallery.v0_1
{
    /// <summary>The Gallery Service.</summary>
    public class GalleryService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v0.1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public GalleryService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public GalleryService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            items = new ItemsResource(this);
            setup = new SetupResource(this);
            tagCategories = new TagCategoriesResource(this);
            tags = new TagsResource(this);
            users = new UsersResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "gallery"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "http://localhost:3278/api/gallery/v0.1/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "api/gallery/v0.1/"; }
        }





        private readonly ItemsResource items;

        /// <summary>Gets the Items resource.</summary>
        public virtual ItemsResource Items
        {
            get { return items; }
        }

        private readonly SetupResource setup;

        /// <summary>Gets the Setup resource.</summary>
        public virtual SetupResource Setup
        {
            get { return setup; }
        }

        private readonly TagCategoriesResource tagCategories;

        /// <summary>Gets the TagCategories resource.</summary>
        public virtual TagCategoriesResource TagCategories
        {
            get { return tagCategories; }
        }

        private readonly TagsResource tags;

        /// <summary>Gets the Tags resource.</summary>
        public virtual TagsResource Tags
        {
            get { return tags; }
        }

        private readonly UsersResource users;

        /// <summary>Gets the Users resource.</summary>
        public virtual UsersResource Users
        {
            get { return users; }
        }
    }

    ///<summary>A base abstract class for Gallery requests.</summary>
    public abstract class GalleryBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new GalleryBaseServiceRequest instance.</summary>
        protected GalleryBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Initializes Gallery parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

        }
    }

    /// <summary>The "items" collection of methods.</summary>
    public class ItemsResource
    {
        private const string Resource = "items";

        ///<summary> The service whih this resource is belong to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ItemsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="body">The body of the request.</param>
        public virtual CreateItemRequest CreateItem(Localhost.Apis.Gallery.v0_1.Data.CreateItemRequest body)
        {
            return new CreateItemRequest(service, body);
        }


        public class CreateItemRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new CreateItem request.</summary>
            public CreateItemRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.CreateItemRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.CreateItemRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "createItem"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/"; }
            }

            /// <summary>Initializes CreateItem parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="id">Path parameter: 'id'.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }


        public class DeleteRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{id}/"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="id">Path parameter: 'id'.</param>
        public virtual GetByIdRequest GetById(string id)
        {
            return new GetByIdRequest(service, id);
        }


        public class GetByIdRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.Item>
        {
            /// <summary>Constructs a new GetById request.</summary>
            public GetByIdRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getById"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{id}/"; }
            }

            /// <summary>Initializes GetById parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="id">Path parameter: 'id'.</param>
        public virtual GetTagsByItemIdRequest GetTagsByItemId(string id)
        {
            return new GetTagsByItemIdRequest(service, id);
        }


        public class GetTagsByItemIdRequest : GalleryBaseServiceRequest<List<Data.Tag>>
        {
            /// <summary>Constructs a new GetTagsByItemId request.</summary>
            public GetTagsByItemIdRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getTagsByItemId"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{id}/tags/"; }
            }

            /// <summary>Initializes GetTagsByItemId parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        public virtual GetVisibleIdsRequest GetVisibleIds()
        {
            return new GetVisibleIdsRequest(service);
        }


        public class GetVisibleIdsRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.PaginatedResponse>
        {
            /// <summary>Constructs a new GetVisibleIds request.</summary>
            public GetVisibleIdsRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Query parameter: 'page'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("page", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> Page { get; set; }

            /// <summary>Query parameter: 'perPage'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("perPage", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PerPage { get; set; }

            /// <summary>Query parameter: 'cutoffDate'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("cutoffDate", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CutoffDate { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getVisibleIds"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/"; }
            }

            /// <summary>Initializes GetVisibleIds parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "page", new Google.Apis.Discovery.Parameter
                    {
                        Name = "page",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "perPage", new Google.Apis.Discovery.Parameter
                    {
                        Name = "perPage",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "cutoffDate", new Google.Apis.Discovery.Parameter
                    {
                        Name = "cutoffDate",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Merges the data from [sourceItemId] into the item specified by [id], and then deletes the item
        /// associated with [sourceItemId]</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="targetItemId">Path parameter: 'targetItemId'.</param>
        public virtual MergeItemsRequest MergeItems(Localhost.Apis.Gallery.v0_1.Data.IdRequest body, string targetItemId)
        {
            return new MergeItemsRequest(service, body, targetItemId);
        }

        /// <summary>Merges the data from [sourceItemId] into the item specified by [id], and then deletes the item
        /// associated with [sourceItemId]</summary>
        public class MergeItemsRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new MergeItems request.</summary>
            public MergeItemsRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.IdRequest body, string targetItemId)
                : base(service)
            {
                TargetItemId = targetItemId;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'targetItemId'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("targetItemId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string TargetItemId { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.IdRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "mergeItems"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{targetItemId}/merge/"; }
            }

            /// <summary>Initializes MergeItems parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "targetItemId", new Google.Apis.Discovery.Parameter
                    {
                        Name = "targetItemId",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        public virtual SearchVisibleRequest SearchVisible(Localhost.Apis.Gallery.v0_1.Data.ItemSearchRequest body)
        {
            return new SearchVisibleRequest(service, body);
        }


        public class SearchVisibleRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.PaginatedResponse>
        {
            /// <summary>Constructs a new SearchVisible request.</summary>
            public SearchVisibleRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.ItemSearchRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.ItemSearchRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "searchVisible"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "search/"; }
            }

            /// <summary>Initializes SearchVisible parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="id">Path parameter: 'id'.</param>
        public virtual UpdateItemRequest UpdateItem(Localhost.Apis.Gallery.v0_1.Data.UpdateItemRequest body, string id)
        {
            return new UpdateItemRequest(service, body, id);
        }


        public class UpdateItemRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new UpdateItem request.</summary>
            public UpdateItemRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.UpdateItemRequest body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.UpdateItemRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "updateItem"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{id}/"; }
            }

            /// <summary>Initializes UpdateItem parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="id">Path parameter: 'id'.</param>
        public virtual UpdateTagsForItemIdRequest UpdateTagsForItemId(List<Data.Tag> body, string id)
        {
            return new UpdateTagsForItemIdRequest(service, body, id);
        }


        public class UpdateTagsForItemIdRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new UpdateTagsForItemId request.</summary>
            public UpdateTagsForItemIdRequest(Google.Apis.Services.IClientService service, List<Data.Tag> body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            List<Data.Tag> Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "updateTagsForItemId"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "items/{id}/tags/"; }
            }

            /// <summary>Initializes UpdateTagsForItemId parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "setup" collection of methods.</summary>
    public class SetupResource
    {
        private const string Resource = "setup";

        ///<summary> The service whih this resource is belong to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public SetupResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="body">The body of the request.</param>
        public virtual ApplyRequest Apply(Localhost.Apis.Gallery.v0_1.Data.SetupRequest body)
        {
            return new ApplyRequest(service, body);
        }


        public class ApplyRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.SetupResponse>
        {
            /// <summary>Constructs a new Apply request.</summary>
            public ApplyRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.SetupRequest body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.SetupRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "apply"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "setup/"; }
            }

            /// <summary>Initializes Apply parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        public virtual GetRequest Get()
        {
            return new GetRequest(service);
        }


        public class GetRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.SetupResponse>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "setup/"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }
    }

    /// <summary>The "tagCategories" collection of methods.</summary>
    public class TagCategoriesResource
    {
        private const string Resource = "tagCategories";

        ///<summary> The service whih this resource is belong to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TagCategoriesResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Localhost.Apis.Gallery.v0_1.Data.TagCategory body)
        {
            return new CreateRequest(service, body);
        }


        public class CreateRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.TagCategory body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.TagCategory Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tag_categories/"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="id">Path parameter: 'id'.</param>
        public virtual DeleteRequest Delete(string id)
        {
            return new DeleteRequest(service, id);
        }


        public class DeleteRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tag_categories/{id}/"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        public virtual GetAllIdsRequest GetAllIds()
        {
            return new GetAllIdsRequest(service);
        }


        public class GetAllIdsRequest : GalleryBaseServiceRequest<List<Data.Tag>>
        {
            /// <summary>Constructs a new GetAllIds request.</summary>
            public GetAllIdsRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getAllIds"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tag_categories/"; }
            }

            /// <summary>Initializes GetAllIds parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="id">Path parameter: 'id'.</param>
        public virtual GetByIdRequest GetById(string id)
        {
            return new GetByIdRequest(service, id);
        }


        public class GetByIdRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.TagCategory>
        {
            /// <summary>Constructs a new GetById request.</summary>
            public GetByIdRequest(Google.Apis.Services.IClientService service, string id)
                : base(service)
            {
                Id = id;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getById"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tag_categories/{id}/"; }
            }

            /// <summary>Initializes GetById parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="id">Path parameter: 'id'.</param>
        public virtual UpdateRequest Update(Localhost.Apis.Gallery.v0_1.Data.TagCategory body, string id)
        {
            return new UpdateRequest(service, body, id);
        }


        public class UpdateRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.TagCategory body, string id)
                : base(service)
            {
                Id = id;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'id'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.TagCategory Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tag_categories/{id}/"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "tags" collection of methods.</summary>
    public class TagsResource
    {
        private const string Resource = "tags";

        ///<summary> The service whih this resource is belong to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public TagsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="query">Path parameter: 'query'.</param>
        public virtual SearchRequest Search(string query)
        {
            return new SearchRequest(service, query);
        }


        public class SearchRequest : GalleryBaseServiceRequest<List<Data.Tag>>
        {
            /// <summary>Constructs a new Search request.</summary>
            public SearchRequest(Google.Apis.Services.IClientService service, string query)
                : base(service)
            {
                Query = query;
                InitParameters();
            }


            /// <summary>Path parameter: 'query'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("query", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Query { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "search"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "tags/search/{query}"; }
            }

            /// <summary>Initializes Search parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "query", new Google.Apis.Discovery.Parameter
                    {
                        Name = "query",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "users" collection of methods.</summary>
    public class UsersResource
    {
        private const string Resource = "users";

        ///<summary> The service whih this resource is belong to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public UsersResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="body">The body of the request.</param>
        /// <param name="uuid">Path parameter: 'uuid'.</param>
        public virtual ChangePasswordRequest ChangePassword(Localhost.Apis.Gallery.v0_1.Data.PasswordChangeRequest body, string uuid)
        {
            return new ChangePasswordRequest(service, body, uuid);
        }


        public class ChangePasswordRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new ChangePassword request.</summary>
            public ChangePasswordRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.PasswordChangeRequest body, string uuid)
                : base(service)
            {
                Uuid = uuid;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'uuid'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("uuid", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Uuid { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.PasswordChangeRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "changePassword"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "users/{uuid}/password/"; }
            }

            /// <summary>Initializes ChangePassword parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "uuid", new Google.Apis.Discovery.Parameter
                    {
                        Name = "uuid",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        public virtual CreateRequest Create(Localhost.Apis.Gallery.v0_1.Data.User body)
        {
            return new CreateRequest(service, body);
        }


        public class CreateRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new Create request.</summary>
            public CreateRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.User body)
                : base(service)
            {
                Body = body;
                InitParameters();
            }



            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.User Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "create"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "users/"; }
            }

            /// <summary>Initializes Create parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="uuid">Path parameter: 'uuid'.</param>
        public virtual DeleteRequest Delete(string uuid)
        {
            return new DeleteRequest(service, uuid);
        }


        public class DeleteRequest : GalleryBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string uuid)
                : base(service)
            {
                Uuid = uuid;
                InitParameters();
            }


            /// <summary>Path parameter: 'uuid'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("uuid", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Uuid { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "users/{uuid}/"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "uuid", new Google.Apis.Discovery.Parameter
                    {
                        Name = "uuid",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="uuid">Path parameter: 'uuid'.</param>
        public virtual GetByIdRequest GetById(string uuid)
        {
            return new GetByIdRequest(service, uuid);
        }


        public class GetByIdRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.User>
        {
            /// <summary>Constructs a new GetById request.</summary>
            public GetByIdRequest(Google.Apis.Services.IClientService service, string uuid)
                : base(service)
            {
                Uuid = uuid;
                InitParameters();
            }


            /// <summary>Path parameter: 'uuid'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("uuid", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Uuid { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getById"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "users/{uuid}/"; }
            }

            /// <summary>Initializes GetById parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "uuid", new Google.Apis.Discovery.Parameter
                    {
                        Name = "uuid",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        public virtual GetMeRequest GetMe()
        {
            return new GetMeRequest(service);
        }


        public class GetMeRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.User>
        {
            /// <summary>Constructs a new GetMe request.</summary>
            public GetMeRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }



            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getMe"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "current_user/"; }
            }

            /// <summary>Initializes GetMe parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="uuid">Path parameter: 'uuid'.</param>
        public virtual UpdateRequest Update(Localhost.Apis.Gallery.v0_1.Data.User body, string uuid)
        {
            return new UpdateRequest(service, body, uuid);
        }


        public class UpdateRequest : GalleryBaseServiceRequest<Localhost.Apis.Gallery.v0_1.Data.IdResponse>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Localhost.Apis.Gallery.v0_1.Data.User body, string uuid)
                : base(service)
            {
                Uuid = uuid;
                Body = body;
                InitParameters();
            }


            /// <summary>Path parameter: 'uuid'.</summary>
            [Google.Apis.Util.RequestParameterAttribute("uuid", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Uuid { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Localhost.Apis.Gallery.v0_1.Data.User Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "users/{uuid}/"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "uuid", new Google.Apis.Discovery.Parameter
                    {
                        Name = "uuid",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}
